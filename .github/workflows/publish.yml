name: Publish
on:
  release:
    types: [released, prereleased]

  workflow_dispatch:  # âœ… Allows manual trigger from the Actions tab

jobs:
  publish:
    name: Release build and publish
    runs-on: macOS-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - name: Publish to MavenCentral
        runs-on: macos-latest
        env:
          GPG_KEY_BASE64: ${{ secrets.GPG_KEY_BASE64 }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }} # optional
        run: |
          # decode armored private key
          echo "$GPG_KEY_BASE64" | base64 --decode > /tmp/private.asc
          
          # inject the armored key into the Gradle env var Gradle expects (preserves newlines)
          export ORG_GRADLE_PROJECT_signingInMemoryKey="$(cat /tmp/private.asc)"
          export ORG_GRADLE_PROJECT_signingInMemoryKeyPassword="$SIGNING_PASSWORD"
          
          # Sonatype credentials
          export ORG_GRADLE_PROJECT_mavenCentralUsername="$MAVEN_CENTRAL_USERNAME"
          export ORG_GRADLE_PROJECT_mavenCentralPassword="$MAVEN_CENTRAL_PASSWORD"
          
          # optional key id
          if [ -n "$SIGNING_KEY_ID" ]; then
            export ORG_GRADLE_PROJECT_signingInMemoryKeyId="$SIGNING_KEY_ID"
          fi
          
          ./gradlew publishToMavenCentral --no-configuration-cache --stacktrace
