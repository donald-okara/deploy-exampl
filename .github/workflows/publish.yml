name: Publish

on:
  push:
    tags:
      - '*'  # runs on any tag push

  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.2.3)"
        required: true

jobs:
  publish:
    name: Release build and publish
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Publish to MavenCentral
        env:
          GPG_KEY_BASE64: ${{ secrets.GPG_KEY_BASE64 }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        run: |
          # decode armored private key
          echo "$GPG_KEY_BASE64" | base64 --decode > /tmp/private.asc
          
          # inject the armored key into Gradle expected env vars
          export ORG_GRADLE_PROJECT_signingInMemoryKey="$(cat /tmp/private.asc)"
          export ORG_GRADLE_PROJECT_signingInMemoryKeyPassword="$SIGNING_PASSWORD"
          export ORG_GRADLE_PROJECT_mavenCentralUsername="$MAVEN_CENTRAL_USERNAME"
          export ORG_GRADLE_PROJECT_mavenCentralPassword="$MAVEN_CENTRAL_PASSWORD"
          if [ -n "$SIGNING_KEY_ID" ]; then
            export ORG_GRADLE_PROJECT_signingInMemoryKeyId="$SIGNING_KEY_ID"
          fi
          
          # version from manual input or tag name
          VERSION_INPUT="${{ github.event.inputs.version }}"
          if [ -z "$VERSION_INPUT" ]; then
            VERSION_INPUT="${GITHUB_REF_NAME}"
          fi
          
          ./gradlew publishToMavenCentral \
            -Pversion="$VERSION_INPUT" \
            --no-configuration-cache \
            --stacktrace
